<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huawei.common.dao.ModifyDeviceInfoMapper" >
  <resultMap id="BaseResultMap" type="com.huawei.common.model.MDeviceInfo" >
    <id column="deviceId" property="deviceId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="deviceType" property="deviceType" jdbcType="VARCHAR" />
    <result column="manufacturerId" property="manufacturerId" jdbcType="VARCHAR" />
    <result column="manufacturerName" property="manufacturerName" jdbcType="VARCHAR" />
    <result column="model" property="model" jdbcType="VARCHAR" />
    <result column="protocolType" property="protocolType" jdbcType="VARCHAR" />
    
    
  </resultMap>
  <sql id="Base_Column_List" >
    deviceId, name, deviceType,manufacturerId,manufacturerName,model,protocolType
  </sql>
  
  <sql id="limit_sql">
  	   <if test="page_sql != null and page_sql != ''">
      	${page_sql}
      </if>
  </sql>
  
  <sql id="where_all">
  	<where>
  	<if test="findContent != null and findContent !='' " >
        and (
        LOWER(name) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%") or
        LOWER(url) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")
        )
      </if>
      </where>
  </sql>
  
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.huawei.common.model.MDeviceInfo" >
    insert into iot_deviceinfo  (deviceId, name, deviceType,manufacturerId,manufacturerName,model,protocolType)
    values (#{deviceId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{deviceType,jdbcType=VARCHAR}, #{manufacturerId,jdbcType=VARCHAR},, #{manufacturerName,jdbcType=VARCHAR},, #{model,jdbcType=VARCHAR},, #{protocolType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.huawei.common.model.MDeviceInfo" >
    insert into iot_deviceinfo 
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deviceId != null" >
        deviceId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="deviceType != null" >
        deviceType,
      </if>
      <if test="manufacturerId != null" >
        manufacturerId,
      </if>
      <if test="manufacturerName != null" >
        manufacturerName,
      </if>     
      <if test="model != null" >
        model,
      </if>     
      <if test="protocolType != null" >
        protocolType,
      </if>                             
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deviceId != null" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null" >
        #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="manufacturerId != null" >
        #{manufacturerId,jdbcType=VARCHAR},
      </if>     
      <if test="manufacturerName != null" >
        #{manufacturerName,jdbcType=VARCHAR},
      </if>     
      <if test="model != null" >
        #{model,jdbcType=VARCHAR},
      </if>     
      <if test="protocolType != null" >
        #{protocolType,jdbcType=VARCHAR},
      </if>                        
    </trim>
  </insert>
  
  
  
</mapper>
